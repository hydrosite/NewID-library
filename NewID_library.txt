local NewID = {}
NewID.Gui = {}

function NewID.Gui:new()
    -- Create the loading screen
    local loadingScreen = Instance.new("ScreenGui")
    loadingScreen.Name = "LoadingScreen"
    loadingScreen.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")

    -- Create the ball
    local ball = Instance.new("Frame")
    ball.Size = UDim2.new(0, 50, 0, 50) -- Size of the ball
    ball.Position = UDim2.new(1, -25, 0.5, 0) -- Start from the right side of the screen
    ball.BackgroundColor3 = Color3.fromRGB(0, 0, 0) -- Black color
    ball.AnchorPoint = Vector2.new(0.5, 0.5)
    ball.Parent = loadingScreen

    -- Create a UICorner to make the ball circular
    local uicorner = Instance.new("UICorner")
    uicorner.CornerRadius = UDim.new(0.5, 0) -- Make the ball circular
    uicorner.Parent = ball

    -- Add the letter "N" to the ball
    local letterN = Instance.new("TextLabel")
    letterN.Size = UDim2.new(1, 0, 1, 0) -- Fill the ball
    letterN.Position = UDim2.new(0, 0, 0, 0) -- Center in the ball
    letterN.Text = "N"
    letterN.TextColor3 = Color3.fromRGB(255, 87, 51) -- White color
    letterN.Font = Enum.Font.Creepster -- Creepster font
    letterN.TextScaled = true
    letterN.BackgroundTransparency = 1
    letterN.Parent = ball

    -- Create the loading text for "New"
    local loadingTextNew = Instance.new("TextLabel")
    loadingTextNew.Size = UDim2.new(0, 100, 0, 100) -- Adjusted width for "New"
    loadingTextNew.Position = UDim2.new(0.5, -100, 0.5, -50) -- Center the text above the ball
    loadingTextNew.Text = "New"
    loadingTextNew.TextColor3 = Color3.fromRGB(0, 0, 0) -- Black color for "New"
    loadingTextNew.Font = Enum.Font.Creepster -- Creepster font
    loadingTextNew.TextScaled = true
    loadingTextNew.BackgroundTransparency = 1
    loadingTextNew.Visible = false -- Hide the text initially
    loadingTextNew.Parent = loadingScreen

    -- Create the loading text for "ID"
    local loadingTextID = Instance.new("TextLabel")
    loadingTextID.Size = UDim2.new(0, 100, 0, 100) -- Adjusted width for "ID"
    loadingTextID.Position = UDim2.new(0.5, 0, 0.5, -50) -- Center "ID" next to "New"
    loadingTextID.Text = "ID"
    loadingTextID.TextColor3 = Color3.fromRGB(255, 140, 0) -- Dark Orange color for "ID"
    loadingTextID.Font = Enum.Font.Creepster -- Creepster font
    loadingTextID.TextScaled = true
    loadingTextID.BackgroundTransparency = 1
    loadingTextID.Visible = false -- Hide the text initially
    loadingTextID.Parent = loadingScreen

    -- Ball animation to roll to the center
    local targetPosition = UDim2.new(0.5, -25, 0.5, 0) -- Target position in the middle
    ball:TweenPosition(targetPosition, "Out", "Bounce", 1, true)

    wait(1) -- Wait for the ball to reach the center

    -- Transition to text
    ball:TweenSize(UDim2.new(0, 0, 0, 0), "Out", "Quad", 0.5, true) -- Shrink the ball

    -- Show the loading text after the ball is gone
    loadingTextNew.Visible = true -- Show the loading text for "New"
    loadingTextID.Visible = true -- Show the loading text for "ID"

    -- Expand the text labels
    loadingTextNew:TweenSize(UDim2.new(0, 100, 0, 100), "Out", "Quad", 0.5, true) -- Expand "New"
    loadingTextNew:TweenPosition(UDim2.new(0.5, -100, 0.5, -50), "Out", "Quad", 0.5, true) -- Center "New"

    loadingTextID:TweenSize(UDim2.new(0, 100, 0, 100), "Out", "Quad", 0.5, true) -- Expand "ID"
    loadingTextID:TweenPosition(UDim2.new(0.5, 0, 0.5, -50), "Out", "Quad", 0.5, true) -- Center "ID" next to "New"

    wait(1) -- Wait for the text transition to finish

    -- Create the main GUI
    local ScreenGui = Instance.new("ScreenGui")
    local Frame = Instance.new("Frame")

    ScreenGui.Name = "DraggableGUI"
    ScreenGui.ResetOnSpawn = false
    ScreenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")

    Frame.Name = "MainFrame"
    Frame.Size = UDim2.new(0, 200, 0, 100)
    Frame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
    Frame.Position = UDim2.new(0.5, -100, 0.5, -50)
    Frame.Parent = ScreenGui

    -- Draggable functionality
    local dragToggle = nil
    local dragSpeed = 0.2
    local dragStart = nil
    local startPos = nil

    local function update(input)
        local delta = input.Position - dragStart
        Frame.Position = UDim2.new(
            startPos.X.Scale,
            startPos.X.Offset + delta.X,
            startPos.Y.Scale,
            startPos.Y.Offset + delta.Y
        )
    end

    Frame.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragToggle = true
            dragStart = input.Position
            startPos = Frame.Position

            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    dragToggle = false
                end
            end)
        end
    end)

    Frame.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement then
            if dragToggle then
                update(input)
            end
        end
    end)

    -- Remove the loading screen after the animation
    loadingScreen:Destroy()
end

return NewID
