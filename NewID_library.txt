local NewID = {}
NewID.Gui = {}

function NewID.Gui:new()
    -- Create the loading screen
    local loadingScreen = Instance.new("ScreenGui")
    loadingScreen.Name = "LoadingScreen"
    loadingScreen.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")

    -- Create the ball
    local ball = Instance.new("Frame")
    ball.Size = UDim2.new(0, 50, 0, 50) -- Size of the ball
    ball.Position = UDim2.new(1, -25, 0.5, 0) -- Start from the right side of the screen
    ball.BackgroundColor3 = Color3.fromRGB(0, 0, 0) -- Black color
    ball.AnchorPoint = Vector2.new(0.5, 0.5)
    ball.Parent = loadingScreen

    -- Create a UICorner to make the ball circular
    local uicorner = Instance.new("UICorner")
    uicorner.CornerRadius = UDim.new(0.5, 0) -- Make the ball circular
    uicorner.Parent = ball

    -- Add the letter "N" to the ball
    local letterN = Instance.new("TextLabel")
    letterN.Size = UDim2.new(1, 0, 1, 0) -- Fill the ball
    letterN.Position = UDim2.new(0, 0, 0, 0) -- Center in the ball
    letterN.Text = "N"
    letterN.TextColor3 = Color3.fromRGB(255, 87, 51) -- White color
    letterN.Font = Enum.Font.Creepster -- Creepster font
    letterN.TextScaled = true
    letterN.BackgroundTransparency = 1
    letterN.Parent = ball

   local G2L = {}

-- StarterGui.ScreenGui
G2L["1"] = Instance.new("ScreenGui", game:GetService("Players").LocalPlayer:WaitForChild("PlayerGui"))
G2L["1"]["ZIndexBehavior"] = Enum.ZIndexBehavior.Sibling

-- StarterGui.ScreenGui.Frame
G2L["2"] = Instance.new("Frame", G2L["1"])
G2L["2"]["BorderSizePixel"] = 0
G2L["2"]["BackgroundColor3"] = Color3.fromRGB(117, 0, 3)
G2L["2"]["Size"] = UDim2.new(0, 209, 0, 100)
G2L["2"]["Position"] = UDim2.new(0.34382, 0, 0.30769, 0)
G2L["2"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)

-- StarterGui.ScreenGui.Frame.TextLabel for "New"
G2L["3"] = Instance.new("TextLabel", G2L["2"])
G2L["3"]["BorderSizePixel"] = 0
G2L["3"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255)
G2L["3"]["TextSize"] = 50
G2L["3"]["FontFace"] = Font.new([[rbxasset://fonts/families/Creepster.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["3"]["TextColor3"] = Color3.fromRGB(0, 0, 0)
G2L["3"]["BackgroundTransparency"] = 1
G2L["3"]["Size"] = UDim2.new(0, 24, 0, 34)
G2L["3"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
G2L["3"]["Text"] = "New"
G2L["3"]["Position"] = UDim2.new(0.34262, 0, 0.32407, 0)

-- StarterGui.ScreenGui.Frame.TextLabel for "ID"
G2L["4"] = Instance.new("TextLabel", G2L["2"])
G2L["4"]["BorderSizePixel"] = 0
G2L["4"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255)
G2L["4"]["TextSize"] = 50
G2L["4"]["FontFace"] = Font.new([[rbxasset://fonts/families/Creepster.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["4"]["TextColor3"] = Color3.fromRGB(255, 88, 52)
G2L["4"]["BackgroundTransparency"] = 1
G2L["4"]["Size"] = UDim2.new(0, 26, 0, 34)
G2L["4"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
G2L["4"]["Text"] = "ID"
G2L["4"]["Position"] = UDim2.new(0.58986, 0, 0.32407, 0)

-- StarterGui.ScreenGui.Frame.UICorner
G2L["5"] = Instance.new("UICorner", G2L["2"])

-- StarterGui.ScreenGui.Frame.UIGradient
G2L["6"] = Instance.new("UIGradient", G2L["2"])
G2L["6"]["Color"] = ColorSequence.new{
    ColorSequenceKeypoint.new(0.000, Color3.fromRGB(167, 0, 0)),
    ColorSequenceKeypoint.new(0.496, Color3.fromRGB(137, 0, 0)),
    ColorSequenceKeypoint.new(1.000, Color3.fromRGB(92, 92, 92))
}

-- Function to create and animate the loading screen
local function createLoadingScreen()
    local loadingScreen = G2L["1"]

    -- Ball for animation
    local ball = Instance.new("Frame")
    ball.Size = UDim2.new(0, 50, 0, 50)
    ball.Position = UDim2.new(1, -25, 0.5, 0) -- Start from the right side
    ball.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
    ball.AnchorPoint = Vector2.new(0.5, 0.5)
    ball.Parent = loadingScreen

    -- UICorner to make the ball circular
    local uicorner = Instance.new("UICorner")
    uicorner.CornerRadius = UDim.new(0.5, 0) -- Circular ball
    uicorner.Parent = ball

    -- Ball animation to roll to the center
    local targetPosition = UDim2.new(0.5, -25, 0.5, 0) -- Target position in the middle
    ball:TweenPosition(targetPosition, "Out", "Bounce", 1, true)

    wait(1) -- Wait for the ball to reach the center

    -- Transition to hide the loading screen
    ball:TweenSize(UDim2.new(0, 0, 0, 0), "Out", "Quad", 0.5, true) -- Shrink the ball

    -- Wait for the ball to shrink completely
    wait(0.5)

    -- Remove the loading screen after the animation
    loadingScreen:Destroy()
end

createLoadingScreen()

return G2L["1"], require


    -- Ball animation to roll to the center
    local targetPosition = UDim2.new(0.5, -25, 0.5, 0) -- Target position in the middle
    ball:TweenPosition(targetPosition, "Out", "Bounce", 1, true)

    wait(1) -- Wait for the ball to reach the center

    -- Transition to text
    ball:TweenSize(UDim2.new(0, 0, 0, 0), "Out", "Quad", 0.5, true) -- Shrink the ball

    -- Show the loading text after the ball is gone
    loadingTextNew.Visible = true -- Show the loading text for "New"
    loadingTextID.Visible = true -- Show the loading text for "ID"

    -- Expand the text labels
    loadingTextNew:TweenSize(UDim2.new(0, 100, 0, 100), "Out", "Quad", 0.5, true) -- Expand "New"
    loadingTextNew:TweenPosition(UDim2.new(0.5, -100, 0.5, -50), "Out", "Quad", 0.5, true) -- Center "New"

    loadingTextID:TweenSize(UDim2.new(0, 100, 0, 100), "Out", "Quad", 0.5, true) -- Expand "ID"
    loadingTextID:TweenPosition(UDim2.new(0.5, 0, 0.5, -50), "Out", "Quad", 0.5, true) -- Center "ID" next to "New"

    wait(1) -- Wait for the text transition to finish

    -- Create the main GUI
    local ScreenGui = Instance.new("ScreenGui")
    local Frame = Instance.new("Frame")

    ScreenGui.Name = "DraggableGUI"
    ScreenGui.ResetOnSpawn = false
    ScreenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")

    Frame.Name = "MainFrame"
    Frame.Size = UDim2.new(0, 200, 0, 100)
    Frame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
    Frame.Position = UDim2.new(0.5, -100, 0.5, -50)
    Frame.Parent = ScreenGui

    -- Draggable functionality
    local dragToggle = nil
    local dragSpeed = 0.2
    local dragStart = nil
    local startPos = nil

    local function update(input)
        local delta = input.Position - dragStart
        Frame.Position = UDim2.new(
            startPos.X.Scale,
            startPos.X.Offset + delta.X,
            startPos.Y.Scale,
            startPos.Y.Offset + delta.Y
        )
    end

    Frame.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragToggle = true
            dragStart = input.Position
            startPos = Frame.Position

            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    dragToggle = false
                end
            end)
        end
    end)

    Frame.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement then
            if dragToggle then
                update(input)
            end
        end
    end)

    -- Remove the loading screen after the animation
    loadingScreen:Destroy()
end

return NewID
