-- NewID Library
local NewID = {}
NewID.Gui = {}

-- Function to create the text animation
function NewID.Gui:showTextAnimation()
    local ScreenGui = Instance.new("ScreenGui")
    local TextLabel = Instance.new("TextLabel")
    
    -- Set properties for the ScreenGui
    ScreenGui.Name = "TextAnimationGui"
    ScreenGui.ResetOnSpawn = false
    ScreenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")

    -- Set properties for the TextLabel
    TextLabel.Name = "AnimatedText"
    TextLabel.Size = UDim2.new(0, 400, 0, 100)
    TextLabel.Position = UDim2.new(0.5, -200, 0.5, -150) -- Start above the center
    TextLabel.BackgroundTransparency = 1
    TextLabel.Text = "NewID Library"
    TextLabel.TextColor3 = Color3.fromRGB(255, 215, 0) -- Gold color
    TextLabel.TextScaled = true
    TextLabel.Parent = ScreenGui

    -- Animation for rolling in
    local tweenService = game:GetService("TweenService")
    local rollTween = tweenService:Create(TextLabel, TweenInfo.new(1, Enum.EasingStyle.Bounce, Enum.EasingDirection.Out), {Position = UDim2.new(0.5, -200, 0.5, -50)})
    rollTween:Play()
    rollTween.Completed:Wait()

    -- Expanding animation
    local expandTween = tweenService:Create(TextLabel, TweenInfo.new(0.5), {Size = UDim2.new(0, 500, 0, 120)})
    expandTween:Play()
    expandTween.Completed:Wait()

    -- Remove the animation text after it's done
    ScreenGui:Destroy()
end

function NewID.Gui:new()
    -- Show text animation before creating the GUI
    self:showTextAnimation()

    local ScreenGui = Instance.new("ScreenGui")
    local Frame = Instance.new("Frame")

    ScreenGui.Name = "DraggableGUI"
    ScreenGui.ResetOnSpawn = false
    ScreenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")

    Frame.Name = "MainFrame"
    Frame.Size = UDim2.new(0, 200, 0, 100) -- Width and Height
    Frame.BackgroundColor3 = Color3.fromRGB(0, 0, 0) -- Black
    Frame.Position = UDim2.new(0.5, -100, 0.5, -50) -- Centered
    Frame.Parent = ScreenGui

    -- Draggable functionality
    local dragToggle = nil
    local dragStart = nil
    local startPos = nil

    local function update(input)
        local delta = input.Position - dragStart
        Frame.Position = UDim2.new(
            startPos.X.Scale,
            startPos.X.Offset + delta.X,
            startPos.Y.Scale,
            startPos.Y.Offset + delta.Y
        )
    end

    Frame.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragToggle = true
            dragStart = input.Position
            startPos = Frame.Position

            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    dragToggle = false
                end
            end)
        end
    end)

    Frame.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement then
            if dragToggle then
                update(input)
            end
        end
    end)
end



-- Return the NewID library
return NewID
